[tool.poetry]
name = "deed-ocr"
version = "0.1.0"
description = "Phase 1: Legal description extraction from scanned deed PDFs"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [{include = "deed_ocr"}]

[tool.poetry.dependencies]
python = "^3.9"
google-cloud-vision = "^3.4.5"
boto3 = "^1.29.7"
click = "^8.1.7"
python-dotenv = "^1.0.0"
pymupdf = "^1.23.0"
Pillow = "^10.1.0"
spacy = "^3.7.2"
pydantic = "^2.5.0"
google-genai = "^0.1.0"
json-repair = "^0.25.0"
# LLM dependencies
openai = {version = "^1.6.0", optional = true}
transformers = {version = "^4.36.0", optional = true}
torch = {version = "^2.1.0", optional = true}
# Layout detection
layoutparser = {version = "^0.3.4", optional = true}
detectron2 = {version = "^0.6", optional = true}

[tool.poetry.extras]
llm = ["openai", "google-genai", "transformers", "torch"]
layout = ["layoutparser", "detectron2"]
all = ["openai", "google-genai", "transformers", "torch", "layoutparser", "detectron2"]

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
black = "^23.11.0"
ruff = "^0.1.6"
pytest-cov = "^4.1.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py39']

[tool.ruff]
line-length = 88
select = ["E", "F", "I", "N", "UP", "B", "C4", "SIM", "RUF"]
ignore = ["E501"]  # line too long
target-version = "py39"

[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]  # allow assert in tests
